plugins {
    id "java-gradle-plugin"
    id "maven-publish"
}
apply plugin: "com.jfrog.bintray"

version "1.0"

dependencies {
    compile "org.eclipse.jgit:org.eclipse.jgit:4.10.0.201712302008-r"
    compile "com.github.spullara.mustache.java:compiler:0.9.5"
}

sourceSets {
    functionalTest {
        kotlin {
            compileClasspath += sourceSets.main.output + configurations.testRuntime
            runtimeClasspath += output + compileClasspath
        }
    }
}

gradlePlugin {
    plugins {
        versioning {
            id = "fr.cvlaminck.gradle.versioning"
            implementationClass = "fr.cvlaminck.gradle.versioning.VersioningPlugin"
        }
    }
    testSourceSets sourceSets.functionalTest
    automatedPublishing = false
}

task functionalTest(type: Test, dependsOn: [":versioning-gradle-plugin:pluginUnderTestMetadata"]) {
    description 'Runs the functional tests.'
    group 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    mustRunAfter test
    reports {
        html.destination = project.file("$html.destination/functional")
        junitXml.destination = project.file("$junitXml.destination/functional")
    }
}

check.dependsOn functionalTest

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        pluginMaven(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

bintray {
    user = "$bintrayUser"
    key = "$bintrayKey"
    pkg {
        repo = "maven"
        name = "versioning-gradle-plugin"
        publications = ["pluginMaven"]
    }
}
